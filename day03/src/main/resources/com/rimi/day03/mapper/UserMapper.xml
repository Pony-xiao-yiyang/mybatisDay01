<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.rimi.day03.mapper.UserMapper">


    <!--
         resultMap  自定义结果映射,默认和resultType规则一样
              属性：     id  结果映射的唯一id
                        type  结果映射的对象

              子标签：
                    id 标签：  设置主键的属性名和列名

                         property： 指明当前对象的属性名
                         javatype： 指明当前对象的属性的类型，如果是java bean，可以省略，自动推断
                         column：    指明当前列的列名
                         jdbcType    JDBC驱动对应的类型，只有在使用JDBC编程时配置，一般不写

                   result 标签。 设置普通字段的属性名和列名映射

                        默认使用set方法
                   constructor   采用构造方法的形式，创建并填充数据
                        使用构造方法注入参数，一定要设置
                                column  数据结果集的列名
                                javaType    方法参数的类型的别名

                        使用构造方法注入数据，如果没有指定@Param的参数名，默认按照从左到右的顺序，根据参数的类型去匹配
                                              如果指定了所有参数的@Param的参数名， 顺序可以自定义
                   association   关联标签，用于”有一个“的多表关联查询
                        关联的嵌套 Select 查询
                               先查询第一张表，然后根据关联字段的关联id， 再查询第二张表，最后将数据整合
                                属性：
                                    property java bean的属性名
                                    column   关联关系的关联id所在列的列名
                                    javaType   当前属性对应的数据库实体java bean的名称
                                    select      第二次查询执行的sql语句
    -->
    <resultMap id="userMap" type="user" >
        <id property="id" column="id" />

        <result property="insertTime" column="insert_time"/>

        <!--<constructor>-->
            <!--<idArg column="user_id" javaType="integer" name="id"/>-->

            <!--<arg column="header_image" javaType="string" name="header"/>-->
            <!--<arg column="insert_time" javaType="date" name="time"/>-->
        <!--</constructor>-->
        
        <association property="huji" column="huji_id" javaType="com.rimi.day03.bean.HuJiDi" select="com.rimi.day03.mapper.HuJiDiMapper.findHuJiDiById">

        </association>
    </resultMap>


    <select id="findUserByUsernameLike" resultType="user">

        select * from book_sys_user where username like concat('%',#{param1},'%')

        <!--select * from book_sys_user where username like '%${param1}%'-->
    </select>


    <!--
        通过select 标签的resultMap属性进行关联，关联到resultMap的id
    -->
    <select id="findAll" resultMap="userMap">
        select * from book_sys_user
    </select>
</mapper>